# the following variables are options you can set for your SCIM Bridge
# uncomment the lines you need

# OP_SESSION can be either the base64-encoded string of a `scimsession` file, or it can be the path to a `scimsession` file (as in a Docker Swarm Secret)
# examples: "OP_SESSION=abcdefg123456", "OP_SESSION=/path/to/scimsession"
OP_SESSION=/run/secrets/scimsession

# OP_LETSENCRYPT_DOMAIN should be set to the domain you want to use for your SCIM Bridge
# this will enable the complimentary LetsEncrypt challenge server
#OP_LETSENCRYPT_DOMAIN=scim.example.com
# alternatively, you can set the variable to blank, which will cause the SCIM Bridge to serve on port 3002
#OP_LETSENCRYPT_DOMAIN=

# (ADVANCED) the options below aren't usually necessary during routine deployments, but can be used if you have a specific need
# OP_PORT can be used to override the port number when the SCIM Bridge is running on port 3002 (when OP_LETSENCRYPT_DOMAIN is blank)
#OP_PORT=3002

# OP_REDIS_URL can be set if you are hosting your redis server at a different location
# set it to a full redis:// or rediss:// (for TLS) URL
OP_REDIS_URL=redis://redis:6379

# OP_PRETTY_LOGS can be set to '1' if you would like the SCIM bridge to output logs in a human-readable format, which can be useful if you're not planning on ingesting these logs externally
#OP_PRETTY_LOGS=1

# OP_DEBUG enables more detailed logging, which can be useful during troubleshooting or debugging
#OP_DEBUG=1

# OP_LETSENCRYPT_EMAIL changes the email address provided to Let's Encrypt when a certificate is issued for your SCIM bridge, default: "1pw@[OP_LETSENCRYPT_DOMAIN]"
#OP_LETSENCRYPT_EMAIL=scim@example.com

# OP_PING_SERVER brings up a `/ping` endpoint which can be useful for health checks
# It is disabled if OP_LETSENCRYPT_DOMAIN is unset
#OP_PING_SERVER=1