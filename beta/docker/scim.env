# These environment variables can be can used to configure your 1Password SCIM Bridge deployment. Environment variable
# values set in this file will be consumed using the "env_file" key of the Compose file, and may be set or overridden by
# the container engine during deployment.

# Set OP_LETSENCRYPT_EMAIL to a valid email address to provide to Let's Encrypt when using CertificateManager. If this
# value is not set, and a certificate is not specified using the OP_TLS_KEY_FILE and OP_CERT_KEY_FILE variables, SCIM
# bridge interpolates an email address using "1pw" as the local-part and the value of OP_TLS_DOMAIN as the domain. For
# example, "1pw@op-scim.example.com".
# OP_LETSENCRYPT_EMAIL=eggs.ample@example.com

# Set OP_CONFIRMATION_INTERVAL to an interval in seconds for the ConfirmationWatcher component to run. This worker
# automatically confirms users who have accepted their invitation. The minimum interval is 30 seconds. If not set, the
# default value of 300 seconds (5 minutes) is used.
# OP_CONFIRMATION_INTERVAL=30

# Set OP_PRETTY_LOGS to 1 to output SCIM bridge container logs in a human-readable format. If not set, or set to 0,
# the logs are output in JSON format.
# OP_PRETTY_LOGS=1

# Set OP_DEBUG to 1 to enable DEBUG level messages in the container logs, which can be useful during troubleshooting or
# debugging. If not set, or set to 0, DEBUG messages are suppressed.
# OP_DEBUG=1

# Set OP_TRACE to 1 to enable TRACE level logging, primarily used to debug Let's Encrypt integration errors. If not
# set, or set to 0, TRACE messages are suppressed.
# OP_TRACE=1

# Set OP_PING_SERVER to 1 to enable a /ping endpoint for health checks on port 8443 when using the CertificateManager
# behind a load balancer that requires health checks. If unset or set to 0, SCIM bridge will not respond to requests
# sent to /ping. This value is ignored if CertificateManager is not enabled.
# OP_PING_SERVER=1

# The below environment variables are included for reference only, and will be overridden by the configuration defined
# in the Compose specification included with this deployment example or require extra configuration. A custom Compose
# file or override is required to use values defined in this file for these variables.

# Set OP_SESSION to either the path to a valid scimsession file mounted in the container filesystem, or the Base64-
# encoded contents of the scimsession file. If this value is not set, the SetupServer component that is exclusively
# used by our marketplace deployments will be enabled. Valid scimsession credentials are required for all
# custom deployments.
# OP_SESSION=eyJ2ZXJzaW9uIjoiMiIsInZlcmlmaWVyIjp7InNhbHQiOiIzaklmUEllNTFhRzJVMDlLQjJneDRnIiwibG9jYWxIYXNoIjoiWldxU3...
# - or -
# OP_SESSION=/path/to/scimsession

# Set OP_REDIS_URL to a valid Redis URI connection string for an available Redis server.
# OP_REDIS_URL=redis://user:secret@localhost:6379/0

# Set OP_PORT to the port number on which to receive plain-text HTTP traffic SCIM requests when CertificateManager is
# not enabled. Ports 8080 and 8443 are reserved for the SetupServer component used exclusively by our marketplace
# deployments and the CertificateManager component, resepectively. If not set, the default value of 3002 is used.
# OP_PORT=65536

# Set OP_TLS_DOMAIN to the public DNS name that points to the public endpoint of your SCIM bridge to enable the
# optional CertificateManager component to terminate TLS traffic on port 8443. If blank or unset, SCIM bridge can
# receive plain-text HTTP traffic on port 3002 (or another port designated by the OP_PORT variable).
# OP_TLS_DOMAIN=op-scim.example.com

# To use your own TLS certificate with CertificateManager, set OP_TLS_KEY_FILE to the path of a valid private TLS
# certificate key file that is paired to the public key specified in OP_TLS_CERT_FILE, and set OP_TLS_CERT_FILE to the
# path of a valid public TLS certificate key file that is paired to the private key specified in OP_TLS_KEY_FILE. If
# only one of the two values is set, the CertificateManager will fail to load. If neither value is set,
# and CertificateManager is enabled, it will request and manage a TLS certificate for SCIM bridge using Let's Encrypt.
# OP_TLS_KEY_FILE=/path/to/key.pem
# OP_TLS_CERT_FILE=/path/to/cert.pem

# Set OP_DNS_CHALLENGE_CONFIG_FILE sets the path to a Let's Encrypt DNS-01 configuration file
# OP_DNS_CHALLENGE_CONFIG_FILE=/path/to/dns01.example.json
